(()=>{"use strict";var e=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function c(e){try{a(o.next(e))}catch(e){i(e)}}function s(e){try{a(o.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,s)}a((o=o.apply(e,t||[])).next())}))};function t(){var e;return{question:`Based on the title "${(null===(e=document.querySelector(".title.ytd-video-primary-info-renderer"))||void 0===e?void 0:e.textContent)||"this video"}", what do you think this video is about?`,options:["Science and Technology","History and Culture","Arts and Entertainment","Other"],correctAnswer:"Science and Technology"}}function n(){const e=document.querySelector("video");e&&e.play()}let o=!1,r=!1;function i(){console.log("Setting up transcript extraction intervals");const i=()=>{if(o||r)o?console.log("Quiz already in progress, skipping this interval"):console.log("Transcription already in progress, skipping this interval");else{console.log("Attempting to extract transcript"),r=!0;const i=document.querySelector("video"),c=i?i.currentTime:0,s=new URLSearchParams(window.location.search).get("v");console.log("Triggering transcript extraction for video:",s,"at time:",c),function(e){return new Promise((t=>{const n=document.querySelector("video");let o,r="",i="";console.log("Starting caption extraction..."),n?(n.currentTime=e,o=setInterval((()=>{var e;const n=document.querySelector(".ytp-caption-segment");if(n){const c=null===(e=n.textContent)||void 0===e?void 0:e.trim();c&&c!==i&&(r+=c+" ",i=c,console.log("Current transcript:",r),r.split(" ").length>=100&&(clearInterval(o),console.log("Content threshold reached, resolving transcript"),t(r.trim())))}else console.log("Captions container not found")}),50)):console.log("Video element not found"),setTimeout((()=>{o&&clearInterval(o),t("")}),9e5)}))}(c).then((i=>{r=!1,"string"==typeof i&&""!==i&&function(r){var i,c,s,a;i=this,c=void 0,a=function*(){if(o)console.log("Quiz already in progress, skipping");else{console.log("Preparing to show quiz");try{console.log("Generating question from content");const{question:i,options:c,correctAnswer:s}=yield function(n){return o=this,r=void 0,c=function*(){if(console.log("Generating question from transcript"),!n||0===n.trim().length)return console.log("No transcript available, generating fallback question"),t();console.log("Generating question using OpenAI");const o=`Based on the following transcript from a YouTube video, generate a multiple-choice question with 4 options. Format the response as JSON with keys: question, options (an array of 4 strings), and correctAnswer. The correct answer has to be included as one of the options. Don't mention the word "transcript" in the question, insteas refer to it as the "video" if needed. Transcript: ${n}`;try{const t=yield function(t){return e(this,void 0,void 0,(function*(){const n=yield function(){return e(this,void 0,void 0,(function*(){return new Promise((e=>{chrome.storage.sync.get("openAIKey",(t=>{e(t.openAIKey)}))}))}))}(),o=yield fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"user",content:t}],max_tokens:150})});return(yield o.json()).choices[0].message.content.trim()}))}(o),n=JSON.parse(t);return console.log("Generated question:",n),n}catch(e){return console.error("Error generating question with OpenAI:",e),t()}},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{a(c.next(e))}catch(e){t(e)}}function s(e){try{a(c.throw(e))}catch(e){t(e)}}function a(t){var o;t.done?e(t.value):(o=t.value,o instanceof i?o:new i((function(e){e(o)}))).then(n,s)}a((c=c.apply(o,r||[])).next())}));var o,r,i,c}(r);if(console.log("Generated question:",i),console.log("Options:",c),console.log("Correct answer:",s),!i||!c||!s)throw new Error("Failed to generate a valid question");o=!0,document.querySelectorAll("#yt-quiz-container").forEach((e=>e.remove()));const a=document.createElement("div");a.id="yt-quiz-container",a.className="fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-10 rounded-lg shadow-lg z-50 max-w-xl w-full",a.innerHTML=`\n      <h2 class="text-3xl font-bold mb-6">${i}</h2>\n      <div id="options" class="space-y-4 text-xl"></div>\n      <button id="submit-answer" class="mt-6 w-full p-3 bg-blue-500 text-white rounded hover:bg-blue-600 transition duration-300">Submit</button>\n    `;const l=a.querySelector("#options");c.forEach((e=>{const t=document.createElement("button");null!==e&&(t.textContent=e,t.className="block w-full p-3 bg-gray-200 rounded hover:bg-gray-300",t.addEventListener("click",(()=>function(e){document.querySelectorAll("#options button").forEach((e=>e.classList.remove("selected"))),e.classList.add("selected")}(t))),l&&l.appendChild(t))}));const u=a.querySelector("#submit-answer");u&&u.addEventListener("click",(()=>function(e){const t=document.querySelector("#options button.selected");if(t)if(t.textContent===e){alert("Correct!");const e=document.getElementById("yt-quiz-container");e&&e.remove(),n(),o=!1}else alert(`Incorrect. The correct answer is: ${e}`);else alert("Please select an answer before submitting.")}(s))),document.body.appendChild(a),console.log("Quiz displayed successfully"),function(){const e=document.querySelector("video");e&&e.pause()}()}catch(e){console.error("Error in showQuiz:",e),e instanceof Error?alert(`An error occurred while generating the quiz: ${e.message}`):alert("An unexpected error occurred while generating the quiz."),n(),o=!1}}},new((s=void 0)||(s=Promise))((function(e,t){function n(e){try{r(a.next(e))}catch(e){t(e)}}function o(e){try{r(a.throw(e))}catch(e){t(e)}}function r(t){var r;t.done?e(t.value):(r=t.value,r instanceof s?r:new s((function(e){e(r)}))).then(n,o)}r((a=a.apply(i,c||[])).next())}))}(i)})).catch((e=>{console.error("Error extracting captions:",e),r=!1}))}};i(),setInterval(i,3e4)}!function(){const e=document.createElement("link");e.href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css",e.rel="stylesheet",document.head.appendChild(e)}(),document.addEventListener("yt-navigate-finish",(()=>{console.log("YouTube navigation finished"),"/watch"===window.location.pathname?(console.log("On a watch page, triggering transcript extraction"),i()):console.log("Not on a watch page, quiz not triggered")}))})();